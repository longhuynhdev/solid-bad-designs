@startuml

interface ICartStorage {
    +List<ShoppingCartItem> LoadFromFile(string fileName)
    +void SaveToFile(string fileName, List<ShoppingCartItem> items) 
}

interface ICartPrinter {
    +void Print(List<ShoppingCartItem> items)
}

class JSONCartStorage {
    +List<ShoppingCartItem> LoadFromFile(string fileName)
    +void SaveToFile(string fileName, List<ShoppingCartItem> items) 
}

class ConsoleCartPrinter {
    +void Print(List<ShoppingCartItem> items)
}

class HTMLCartPrinter {
    +void Print(List<ShoppingCartItem> items)
}

class ShoppingCart {
    -List<ShoppingCartItem> items
    +IEnumerable<ShoppingCartItem> Items 
    +void Add(ShoppingCartItem)
    +void Remove(ShoppingCartItem)
    +void Clear()
    +double GetTotal()
}

class ShoppingCartItem {
    +int ProductId
    +int Quantity
    +string? Title
    +double Price
}

' Relations between classes
ICartStorage <|-- JSONCartStorage : implements
ICartPrinter <|-- ConsoleCartPrinter : implements
ICartStorage ..> ShoppingCartItem : uses

ICartPrinter <|-- HTMLCartPrinter
ICartPrinter ..> ShoppingCartItem : uses

ShoppingCart o--  ShoppingCartItem : contains 

note top of ShoppingCart
Tách ShoppingCart thành các trách nhiệm riêng biệt:
- ShoppingCart: Xử lý quản lý giỏ hàng (thêm/xóa/tính tiền)
- ICartStorage: Xử lý lưu trữ (đọc/ghi file)  
- ICartPrinter: Xử lý hiển thị (console/HTML)
==> Mỗi class chỉ có một trách nhiệm duy nhất, dễ bảo trì và mở rộng.
endnote

@enduml